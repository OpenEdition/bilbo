########################################################################
#
# File Name:            HTMLAppletElement
#
#

### This file is automatically generated by GenerateHtml.py.
### DO NOT EDIT!

"""
WWW: http://4suite.com/4DOM         e-mail: support@4suite.com

Copyright (c) 2000 Fourthought Inc, USA.   All Rights Reserved.
See  http://4suite.com/COPYRIGHT  for license and copyright information
"""

import string
from xml.dom import Node
from xml.dom.html.HTMLElement import HTMLElement

class HTMLAppletElement(HTMLElement):

    def __init__(self, ownerDocument, nodeName="APPLET"):
        HTMLElement.__init__(self, ownerDocument, nodeName)

    ### Attribute Methods ###

    def _get_align(self):
        return string.capitalize(self.getAttribute("ALIGN"))

    def _set_align(self, value):
        self.setAttribute("ALIGN", value)

    def _get_alt(self):
        return self.getAttribute("ALT")

    def _set_alt(self, value):
        self.setAttribute("ALT", value)

    def _get_archive(self):
        return self.getAttribute("ARCHIVE")

    def _set_archive(self, value):
        self.setAttribute("ARCHIVE", value)

    def _get_code(self):
        return self.getAttribute("CODE")

    def _set_code(self, value):
        self.setAttribute("CODE", value)

    def _get_codeBase(self):
        return self.getAttribute("CODEBASE")

    def _set_codeBase(self, value):
        self.setAttribute("CODEBASE", value)

    def _get_height(self):
        return self.getAttribute("HEIGHT")

    def _set_height(self, value):
        self.setAttribute("HEIGHT", value)

    def _get_hspace(self):
        return self.getAttribute("HSPACE")

    def _set_hspace(self, value):
        self.setAttribute("HSPACE", value)

    def _get_name(self):
        return self.getAttribute("NAME")

    def _set_name(self, value):
        self.setAttribute("NAME", value)

    def _get_object(self):
        return self.getAttribute("OBJECT")

    def _set_object(self, value):
        self.setAttribute("OBJECT", value)

    def _get_vspace(self):
        return self.getAttribute("VSPACE")

    def _set_vspace(self, value):
        self.setAttribute("VSPACE", value)

    def _get_width(self):
        return self.getAttribute("WIDTH")

    def _set_width(self, value):
        self.setAttribute("WIDTH", value)

    ### Attribute Access Mappings ###

    _readComputedAttrs = HTMLElement._readComputedAttrs.copy()
    _readComputedAttrs.update({
        "align" : _get_align,
        "alt" : _get_alt,
        "archive" : _get_archive,
        "code" : _get_code,
        "codeBase" : _get_codeBase,
        "height" : _get_height,
        "hspace" : _get_hspace,
        "name" : _get_name,
        "object" : _get_object,
        "vspace" : _get_vspace,
        "width" : _get_width
        })

    _writeComputedAttrs = HTMLElement._writeComputedAttrs.copy()
    _writeComputedAttrs.update({
        "align" : _set_align,
        "alt" : _set_alt,
        "archive" : _set_archive,
        "code" : _set_code,
        "codeBase" : _set_codeBase,
        "height" : _set_height,
        "hspace" : _set_hspace,
        "name" : _set_name,
        "object" : _set_object,
        "vspace" : _set_vspace,
        "width" : _set_width
        })

    _readOnlyAttrs = filter(lambda k,m=_writeComputedAttrs: not m.has_key(k),
                     HTMLElement._readOnlyAttrs + _readComputedAttrs.keys())
