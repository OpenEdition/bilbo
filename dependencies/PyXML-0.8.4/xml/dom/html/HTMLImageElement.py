########################################################################
#
# File Name:            HTMLImageElement
#
#

### This file is automatically generated by GenerateHtml.py.
### DO NOT EDIT!

"""
WWW: http://4suite.com/4DOM         e-mail: support@4suite.com

Copyright (c) 2000 Fourthought Inc, USA.   All Rights Reserved.
See  http://4suite.com/COPYRIGHT  for license and copyright information
"""

import string
from xml.dom import Node
from xml.dom.html.HTMLElement import HTMLElement

class HTMLImageElement(HTMLElement):

    def __init__(self, ownerDocument, nodeName="IMG"):
        HTMLElement.__init__(self, ownerDocument, nodeName)

    ### Attribute Methods ###

    def _get_lowSrc(self):
        return self.getAttribute("LOWSRC")

    def _set_lowSrc(self, value):
        self.setAttribute("LOWSRC", value)

    def _get_name(self):
        return self.getAttribute("NAME")

    def _set_name(self, value):
        self.setAttribute("NAME", value)

    def _get_align(self):
        return string.capitalize(self.getAttribute("ALIGN"))

    def _set_align(self, value):
        self.setAttribute("ALIGN", value)

    def _get_alt(self):
        return self.getAttribute("ALT")

    def _set_alt(self, value):
        self.setAttribute("ALT", value)

    def _get_border(self):
        return self.getAttribute("BORDER")

    def _set_border(self, value):
        self.setAttribute("BORDER", value)

    def _get_height(self):
        return self.getAttribute("HEIGHT")

    def _set_height(self, value):
        self.setAttribute("HEIGHT", value)

    def _get_hspace(self):
        return self.getAttribute("HSPACE")

    def _set_hspace(self, value):
        self.setAttribute("HSPACE", value)

    def _get_isMap(self):
        return self.hasAttribute("ISMAP")

    def _set_isMap(self, value):
        if value:
            self.setAttribute("ISMAP", "ISMAP")
        else:
            self.removeAttribute("ISMAP")

    def _get_longDesc(self):
        return self.getAttribute("LONGDESC")

    def _set_longDesc(self, value):
        self.setAttribute("LONGDESC", value)

    def _get_src(self):
        return self.getAttribute("SRC")

    def _set_src(self, value):
        self.setAttribute("SRC", value)

    def _get_useMap(self):
        return self.getAttribute("USEMAP")

    def _set_useMap(self, value):
        self.setAttribute("USEMAP", value)

    def _get_vspace(self):
        return self.getAttribute("VSPACE")

    def _set_vspace(self, value):
        self.setAttribute("VSPACE", value)

    def _get_width(self):
        return self.getAttribute("WIDTH")

    def _set_width(self, value):
        self.setAttribute("WIDTH", value)

    ### Attribute Access Mappings ###

    _readComputedAttrs = HTMLElement._readComputedAttrs.copy()
    _readComputedAttrs.update({
        "lowSrc" : _get_lowSrc,
        "name" : _get_name,
        "align" : _get_align,
        "alt" : _get_alt,
        "border" : _get_border,
        "height" : _get_height,
        "hspace" : _get_hspace,
        "isMap" : _get_isMap,
        "longDesc" : _get_longDesc,
        "src" : _get_src,
        "useMap" : _get_useMap,
        "vspace" : _get_vspace,
        "width" : _get_width
        })

    _writeComputedAttrs = HTMLElement._writeComputedAttrs.copy()
    _writeComputedAttrs.update({
        "lowSrc" : _set_lowSrc,
        "name" : _set_name,
        "align" : _set_align,
        "alt" : _set_alt,
        "border" : _set_border,
        "height" : _set_height,
        "hspace" : _set_hspace,
        "isMap" : _set_isMap,
        "longDesc" : _set_longDesc,
        "src" : _set_src,
        "useMap" : _set_useMap,
        "vspace" : _set_vspace,
        "width" : _set_width
        })

    _readOnlyAttrs = filter(lambda k,m=_writeComputedAttrs: not m.has_key(k),
                     HTMLElement._readOnlyAttrs + _readComputedAttrs.keys())
