########################################################################
#
# File Name:            HTMLBodyElement
#
#

### This file is automatically generated by GenerateHtml.py.
### DO NOT EDIT!

"""
WWW: http://4suite.com/4DOM         e-mail: support@4suite.com

Copyright (c) 2000 Fourthought Inc, USA.   All Rights Reserved.
See  http://4suite.com/COPYRIGHT  for license and copyright information
"""

import string
from xml.dom import Node
from xml.dom.html.HTMLElement import HTMLElement

class HTMLBodyElement(HTMLElement):

    def __init__(self, ownerDocument, nodeName="BODY"):
        HTMLElement.__init__(self, ownerDocument, nodeName)

    ### Attribute Methods ###

    def _get_aLink(self):
        return self.getAttribute("ALINK")

    def _set_aLink(self, value):
        self.setAttribute("ALINK", value)

    def _get_background(self):
        return self.getAttribute("BACKGROUND")

    def _set_background(self, value):
        self.setAttribute("BACKGROUND", value)

    def _get_bgColor(self):
        return self.getAttribute("BGCOLOR")

    def _set_bgColor(self, value):
        self.setAttribute("BGCOLOR", value)

    def _get_link(self):
        return self.getAttribute("LINK")

    def _set_link(self, value):
        self.setAttribute("LINK", value)

    def _get_text(self):
        return self.getAttribute("TEXT")

    def _set_text(self, value):
        self.setAttribute("TEXT", value)

    def _get_vLink(self):
        return self.getAttribute("VLINK")

    def _set_vLink(self, value):
        self.setAttribute("VLINK", value)

    ### Attribute Access Mappings ###

    _readComputedAttrs = HTMLElement._readComputedAttrs.copy()
    _readComputedAttrs.update({
        "aLink" : _get_aLink,
        "background" : _get_background,
        "bgColor" : _get_bgColor,
        "link" : _get_link,
        "text" : _get_text,
        "vLink" : _get_vLink
        })

    _writeComputedAttrs = HTMLElement._writeComputedAttrs.copy()
    _writeComputedAttrs.update({
        "aLink" : _set_aLink,
        "background" : _set_background,
        "bgColor" : _set_bgColor,
        "link" : _set_link,
        "text" : _set_text,
        "vLink" : _set_vLink
        })

    _readOnlyAttrs = filter(lambda k,m=_writeComputedAttrs: not m.has_key(k),
                     HTMLElement._readOnlyAttrs + _readComputedAttrs.keys())
